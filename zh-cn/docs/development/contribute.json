{
  "filename": "contribute.md",
  "__html": "<h2>贡献</h2>\n<p>您可以提交一个bug，一个Feature建议或者直接提交改进。</p>\n<h3>1. 如何提交Bug</h3>\n<p>当您发现一个Bug时，请提交Bug，提交前：</p>\n<ul>\n<li>请先在issue列表里查找一下是否该bug已经提交，如果已经有此bug，请在此bug下接着回复。</li>\n<li>如果该Bug是可以复现的。请尽量提供完整的重现步骤。</li>\n</ul>\n<p>请在issues页面中提交Bug。</p>\n<p>一个高质量的Bug通常有以下特征：</p>\n<ul>\n<li>使用一个清晰并有描述性的标题来定义Bug。</li>\n<li>详细的描述复现Bug的步骤。包括您的配置情况，预计产生的结果，实际产生的结果。并附加详细的TRACE日志。</li>\n<li>如果程序抛出异常，请附加完整的堆栈日志。</li>\n<li>如有可能，请附上屏幕截图或动态的GIF图，这些图片能帮助演示整个问题的产生过程。</li>\n<li>哪个版本。</li>\n<li>需要修复的优先级(危急、重大、次要、细微)。</li>\n</ul>\n<p>下面是Bug的Markdown模板，请按照该模板填写issue。</p>\n<pre><code class=\"language-shell\">**标题** \n标题格式: [BUG][Priority] bug标题\nPriority分为四级: Critical、Major、Minor、Trivial\n\n**问题描述**\n[清晰准确描述遇到的问题]\n\n**问题复现步骤:**\n1. [第一步]\n2. [第二步]\n3. [...]\n\n**期望的表现:**\n[在这里描述期望的表现]\n\n**观察到的表现:**\n[在这里描述观察到的表现]\n\n**屏幕截图和动态GIF图**\n![复现步骤的屏幕截图和动态GIF图](图片的url)\n\n**DolphinScheduler版本:(以1.1.0为例)** \n -[1.1.0]\n \n**补充的内容:**\n[请描述补充的内容，比如]\n\n**需求或者建议**\n[请描述你的需求或者建议]\n</code></pre>\n<h3>2. 如何提交功能(Feature)建议</h3>\n<p>提交前：</p>\n<ul>\n<li>请确定这不是一个重复的功能增强建议。 查看Issue Page列表，搜索您要提交的功能增强建议是否已经被提交过。</li>\n</ul>\n<p>请在issues页面中提交Feature。</p>\n<p>一个高质量的Feature通常有以下特征：</p>\n<ul>\n<li>一个清晰的标题来定义Feature</li>\n<li>详细描述Feature的行为模式</li>\n<li>说明为什么该Feature对大多数用户是有用的。新功能应该具有广泛的适用性。</li>\n<li>尽量列出其他调度已经具备的类似功能。商用与开源软件均可。</li>\n</ul>\n<p>以下是Feature的Markdown模板，请按照该模板填写issue。</p>\n<pre><code class=\"language-shell\">**标题** \n标题格式: [Feature][Priority] feature标题\nPriority分为四级: Critical、Major、Minor、Trivial\n\n**Feature的描述**\n[描述新Feature应实现的功能]\n\n**为什么这个新功能是对大多数用户有用的**\n[解释这个功能为什么对大多数用户是有用的]\n\n**补充的内容**\n[列出其他的调度是否包含该功能，是如何实现的]\n\n</code></pre>\n<h3>3. 如何领取Bug/Feature</h3>\n<p>如果您想实现某个Feature或者修复某个Bug。请参考以下内容：</p>\n<ul>\n<li>所有的Bug与新Feature建议使用Issues Page进行管理。</li>\n<li>如果想要开发实现某个Feature功能，请先回复该功能所关联的Issue，表明您当前正在这个Issue上工作。 并在回复的时候为自己设置一个deadline，并添加的回复内容中。</li>\n<li>最好在核心贡献者找到一个导师(指导者)，导师会在设计与功能实现上给予即时的反馈。</li>\n<li>您应该新建一个分支来开始您的工作，分支的名字为Feature功能名称/issueId。 比如，您想完成依赖功能并提交了Issue 111，那么您的branch名字应为 dependency/111。 功能名称可与导师讨论后确定。</li>\n<li>完成后，发送一个pull request到incubator-dolphinscheduler，提交过程具体请参考下面《如何提交代码》。</li>\n</ul>\n<h3>4. 如何提交代码</h3>\n<ul>\n<li>\n<p>首先从远端仓库<em><a href=\"https://github.com/apache/incubator-dolphinscheduler.git\">https://github.com/apache/incubator-dolphinscheduler.git</a></em> fork一份代码到自己的仓库中</p>\n</li>\n<li>\n<p>远端仓库中目前有三个分支：</p>\n<ul>\n<li>\n<p>master 正常交付分支\n发布稳定版本以后，将稳定版本分支的代码合并到master上。</p>\n</li>\n<li>\n<p>dev    日常开发分支\n日常dev开发分支，新提交的代码都可以pull request到这个分支上。</p>\n</li>\n<li>\n<p>branch-1.0.0 发布版本分支\n发布版本分支，后续会有2.0...等版本分支，版本分支只修改bug，不增加新功能。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>把自己仓库clone到本地</p>\n<p><code>git clone https://github.com/apache/incubator-dolphinscheduler.git</code></p>\n</li>\n<li>\n<p>添加远端仓库地址，命名为upstream</p>\n<p><code>git remote add upstream https://github.com/apache/incubator-dolphinscheduler.git</code></p>\n</li>\n<li>\n<p>查看仓库：</p>\n<p><code>git remote -v</code></p>\n</li>\n</ul>\n<blockquote>\n<p>此时会有两个仓库：origin(自己的仓库)和upstream（远端仓库）</p>\n</blockquote>\n<ul>\n<li>\n<p>获取/更新远端仓库代码（已经是最新代码，就跳过）</p>\n<p><code>git fetch upstream</code></p>\n</li>\n<li>\n<p>同步远端仓库代码到本地仓库</p>\n</li>\n</ul>\n<pre><code> git checkout origin/dev\n git merge --no-ff upstream/dev\n</code></pre>\n<p>如果远端分支有新加的分支比如<code>dev-1.0</code>,需要同步这个分支到本地仓库</p>\n<pre><code>git checkout -b dev-1.0 upstream/dev-1.0\ngit push --set-upstream origin dev1.0\n</code></pre>\n<ul>\n<li>\n<p>在本地修改代码以后，提交到自己仓库：</p>\n<p><code>git commit -m 'commit content'</code>\n<code>git push</code></p>\n</li>\n<li>\n<p>将修改提交到远端仓库</p>\n<ul>\n<li>在github页面，点击New pull request.  <p align=\"center\">\n <img src=\"http://geek.analysys.cn/static/upload/221/2019-04-02/90f3abbf-70ef-4334-b8d6-9014c9cf4c7f.png\" width=\"60%\" />\n</li>\n</ul>\n   </p>\n<ul>\n<li>选择修改完的本地分支和要合并过去的分支，Create pull request.  <p align=\"center\">\n <img src=\"http://geek.analysys.cn/static/upload/221/2019-04-02/fe7eecfe-2720-4736-951b-b3387cf1ae41.png\" width=\"60%\" />\n</li>\n</ul>\n   </p>\n</li>\n<li>\n<p>接着社区Committer们会做CodeReview，然后他会与您讨论一些细节（包括设计，实现，性能等）。当团队中所有人员对本次修改满意后，会将提交合并到dev分支</p>\n</li>\n<li>\n<p>最后，恭喜您已经成为了dolphinscheduler的官方贡献者！</p>\n</li>\n</ul>\n",
  "link": "/zh-cn/docs/development/contribute.html",
  "meta": {}
}